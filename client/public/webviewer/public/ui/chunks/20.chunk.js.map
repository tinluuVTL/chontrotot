{"version":3,"sources":["webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopup.scss?c6ed","webpack:///./src/ui/src/components/CreatableList/CreatableList.scss?37a9","webpack:///./src/ui/src/components/CreatableDropdown/CreatableDropdown.scss?fb39","webpack:///./src/ui/src/components/CreatableDropdown/CreatableDropdown.scss","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopup.scss","webpack:///./src/ui/src/components/CreatableList/CreatableList.scss","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/SignatureOptionsDropdown.scss?45fa","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/SignatureOptionsDropdown.scss","webpack:///./src/ui/src/components/ReactSelectCustomArrowIndicator/index.js","webpack:///./src/ui/src/components/ReactSelectCustomArrowIndicator/ReactSelectCustomArrowIndicator.js","webpack:///./src/ui/src/components/CreatableDropdown/CreatableDropdown.js","webpack:///./src/ui/src/components/CreatableDropdown/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldPopupDimensionsInput/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldPopupDimensionsInput/FormFieldPopupDimensionsInput.js","webpack:///./src/ui/src/components/CreatableList/CreatableListItem.js","webpack:///./src/ui/src/components/CreatableList/CreatableListContainer.js","webpack:///./src/ui/src/components/CreatableList/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopupIndicator/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopupIndicator/FormFieldEditPopupIndicator.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopup.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/SignatureOptionsDropdown.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/FormFieldEditSignaturePopup.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopupContainer.js","webpack:///./src/ui/src/components/FormFieldEditPopup/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","ReactSelectCustomArrowIndicator","props","menuIsOpen","selectProps","IndicatorsContainer","Icon","className","glyph","CreatableDropdown","onChange","onInputChange","onCreateOption","textPlaceholder","value","isClearable","isValid","messageText","t","useTranslation","customStyles","control","provided","state","minHeight","height","backgroundColor","borderColor","boxShadow","singleValue","color","menu","option","input","indicatorsContainer","paddingRight","ReactSelectWebComponentProvider","placeholder","formatCreateLabel","styles","components","undefined","FormFieldPopupDimensionsInput","width","onWidthChange","onHeightChange","id","type","min","e","target","CreatableListItem","index","onDeleteItem","moveListItem","addItem","ItemTypes","ref","useRef","drop","useDrop","accept","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","useDrag","collect","isDragging","drag","onChangeHandler","useCallback","event","addNewItemOnEnterKey","key","opacity","style","displayValue","onKeyPress","autoFocus","Button","title","img","onClick","CreatableList","onOptionsUpdated","popupRef","draggableItems","map","useState","items","setItems","nextId","setNextId","containerRef","useEffect","sanitizedOptions","onAddItem","validatePopupHeight","handleDeleteItem","updatedItems","filter","result","dragItem","itemsWithoutDraggedElement","_item","itemsWithDraggedElementAtNewPosition","slice","splice","popupContainer","containerElement","availableHeight","window","innerHeight","isListOverflowing","scrollHeight","clientHeight","maxContainerHeight","childElementCount","maxHeight","label","FormFieldEditPopupIndicator","indicator","indicatorPlaceholder","Choice","checked","isChecked","showIndicator","toggleIndicator","Input","fillWidth","disabled","FormFieldEditPopup","fields","flags","closeFormFieldEditPopup","validationMessage","radioButtonGroups","onOptionsChange","annotation","selectedRadioGroup","getPageHeight","getPageWidth","redrawAnnotation","deleteAnnotation","classNames","Popup","Width","toFixed","setWidth","Height","setHeight","initialWidth","initialHeight","radioButtonGroup","setRadioButtonGroup","renderInput","field","required","message","focus","renderTextInput","displayRadioGroups","group","inputValue","onSelectInputChange","renderSelectInput","getFormFieldPlaceholderType","flag","validatedWidth","maxWidth","X","validateWidth","validatedHeight","Y","validateHeight","HorizontalDivider","find","includes","trim","dataElement","SignatureOptionsDropdown","initialOption","valueContainer","padding","signatureOptions","SignatureModes","FULL_SIGNATURE","INITIALS","init","setValue","DataElementWrapper","isSearchable","FormFieldEditSignaturePopup","onSignatureOptionChange","getSignatureOptionHandler","setIndicatorPlaceholder","FormFieldEditPopupContainer","formFieldCreationManager","core","getFormFieldCreationManager","fieldLabels","getFieldLabels","fieldName","setFieldName","fieldValue","setFieldValue","isReadOnly","setReadOnly","isMultiLine","setMultiLine","isRequired","setIsRequired","isMultiSelect","setIsMultiSelect","setIsValid","setRadioButtonGroups","left","position","setPosition","setValidationMessage","setShowIndicator","indicatorText","setIndicatorText","isOpen","useSelector","selectors","isElementOpen","DataElements","FORM_FIELD_EDIT_POPUP","shallowEqual","dispatch","useDispatch","closeAndReset","actions","enableElement","ANNOTATION_POPUP","PRIORITY_THREE","closeElement","useOnClickOutside","deleteFormFieldPlaceholder","deleteAnnotations","onFormFieldCreationModeStarted","getRadioButtonGroups","addEventListener","removeEventListener","radioGroups","getAnnotationsList","isFormFieldPlaceholder","radioButton","getFieldName","dedupedRadioGroups","Set","useLayoutEffect","getAnnotationPopupPositionBasedOn","getFieldValue","getFieldFlag","READ_ONLY","MULTI_LINE","REQUIRED","MULTI_SELECT","isFieldNameValid","getShowIndicator","getIndicatorText","onFieldNameChange","name","validatedResponse","mapValidationResponseToTranslation","validationResponse","translationKey","errorType","onFieldValueChange","onReadOnlyChange","setFieldFlag","onMultiLineChange","onRequiredChange","onMultiSelectChange","onFieldOptionsChange","setFieldOptions","onShowFieldIndicatorChange","onFieldIndicatorTextChange","onCloseRadioButtonPopup","indexOf","getAnnotationManager","drawAnnotationsFromList","getCurrentPage","signatureOption","setSignatureOption","getSignatureOption","formFieldPlaceHolder","NAME","VALUE","RADIO_GROUP","textFields","defaultFields","radioButtonFields","listBoxFields","comboBoxFields","isMobile","isMobileSize","textFieldFlags","signatureFlags","checkBoxFlags","radioButtonFlags","listBoxFlags","comboBoxFlags","renderPopUp","fieldOptions","intent","getFieldOptions","renderComboBoxFormFieldEditPopup","renderFormFieldEditPopup","open","closed","data-element","cancel","React","memo"],"mappings":"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","file":"chunks/20.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./FormFieldEditPopup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./CreatableList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./CreatableDropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".messageText{width:100%;font-size:11px;margin-top:4px}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.FormFieldEditPopupContainer{visibility:visible}.closed.FormFieldEditPopupContainer{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.FormFieldEditPopupContainer{position:absolute;z-index:70;display:flex;justify-content:center;align-items:center}.FormFieldEditPopupContainer:empty{padding:0}.FormFieldEditPopupContainer .buttons{display:flex}.FormFieldEditPopupContainer .Button{margin:4px;width:32px;height:32px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .FormFieldEditPopupContainer .Button{width:42px;height:42px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .FormFieldEditPopupContainer .Button{width:42px;height:42px}}.FormFieldEditPopupContainer .Button:hover{background:var(--popup-button-hover)}.FormFieldEditPopupContainer .Button .Icon{width:18px;height:18px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .FormFieldEditPopupContainer .Button .Icon{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .FormFieldEditPopupContainer .Button .Icon{width:24px;height:24px}}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button{width:100%;border-radius:0;justify-content:flex-start;padding-left:var(--padding-small);padding-right:var(--padding-small);margin:0 0 var(--padding-tiny) 0}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button:first-child{margin-top:var(--padding-tiny)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .is-vertical.FormFieldEditPopupContainer .Button.main-menu-button{width:100%;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .is-vertical.FormFieldEditPopupContainer .Button.main-menu-button{width:100%;height:32px}}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button .Icon{margin-right:10px}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button span{white-space:nowrap}@-webkit-keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@-webkit-keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.FormFieldEditPopup{padding:8px 12px 6px}.FormFieldEditPopup .fields-container{margin-bottom:5px}.FormFieldEditPopup .radio-group-label{grid-area:group-message;font-size:10px;width:240px;padding-top:5px}.FormFieldEditPopup .field-input{padding:5px 0;display:grid;grid-template-columns:1fr 2fr;grid-template-areas:\\\"label dropdown\\\" \\\"group-message group-message\\\"}.FormFieldEditPopup .field-input label{padding-top:10px;padding-right:10px;grid-area:label}.FormFieldEditPopup .field-flags-container{display:flex;flex-direction:column}.FormFieldEditPopup .field-flags-title{padding-bottom:5px}.FormFieldEditPopup .form-buttons-container{display:flex;flex-direction:row;justify-content:flex-end;padding-top:5px}.FormFieldEditPopup .ok-form-field-button{display:flex;justify-content:center;align-items:center;background-color:var(--primary-button);border:1px solid var(--primary-button);color:var(--primary-button-text);padding:6px 18px;width:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border-radius:4px;height:28px;cursor:pointer}.FormFieldEditPopup .ok-form-field-button:hover{background:var(--primary-button-hover);border:1px solid var(--primary-button-hover)}.FormFieldEditPopup .cancel-form-field-button{display:flex;justify-content:center;align-items:center;color:var(--secondary-button-text);padding:6px 18px;width:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:28px;cursor:pointer}.FormFieldEditPopup .cancel-form-field-button:hover{color:var(--secondary-button-hover);background:transparent}.field-options-container{width:180px}.field-options-container .creatable-list{max-height:200px;overflow:auto}.field-options-container input{width:120px;height:28px}.field-options-container .Button.add-item-button{width:90px;margin-left:0;justify-content:left}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .field-options-container .Button.add-item-button{width:110px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .field-options-container .Button.add-item-button{width:110px}}.form-dimension{padding-top:10px;display:flex;align-items:center}.form-dimension-input{padding-left:5px}.form-dimension-input input::-webkit-inner-spin-button,.form-dimension-input input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.form-dimension-input input[type=number]{-moz-appearance:textfield}.form-dimension-input input{width:55px;height:28px}.FormFieldEditPopupContainer{border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .FormFieldEditPopupContainer{width:95%;position:fixed;left:1.25%!important;top:105px!important}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .FormFieldEditPopupContainer{width:95%;position:fixed;left:1.25%!important;top:105px!important}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".creatable-list{display:flex;flex-direction:column}.creatable-list-item{display:flex;flex-direction:row;align-items:center}.add-item-button{display:flex;align-items:center;width:78px;cursor:pointer}.icon-handle{cursor:-webkit-grab;cursor:grab}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../../node_modules/sass-loader/dist/cjs.js!./SignatureOptionsDropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".signature-options-container{padding:5px 0;display:grid;grid-template-columns:.5fr 1fr;grid-template-areas:\\\"label dropdown\\\";align-items:center}.signature-options-container label{grid-area:label}.arrow{width:12px;height:16px;margin-top:2px}\", \"\"]);\n\n// exports\n","import ReactSelectCustomArrowIndicator from './ReactSelectCustomArrowIndicator';\n\nexport default ReactSelectCustomArrowIndicator;","import React from 'react';\nimport { components } from 'react-select';\nimport Icon from 'components/Icon';\n\nconst ReactSelectCustomArrowIndicator = (props) => {\n  const { selectProps } = props;\n  const { menuIsOpen } = selectProps;\n  return (\n    <components.IndicatorsContainer {...props}>\n      <Icon className=\"arrow\" glyph={`icon-chevron-${menuIsOpen ? 'up' : 'down'}`} />\n    </components.IndicatorsContainer>\n  );\n};\n\nexport default ReactSelectCustomArrowIndicator;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CreatableSelect from 'react-select/creatable';\nimport ReactSelectCustomArrowIndicator from 'components/ReactSelectCustomArrowIndicator';\nimport ReactSelectWebComponentProvider from '../ReactSelectWebComponentProvider';\n\nimport './CreatableDropdown.scss';\n\nconst CreatableDropdown = ({\n  onChange,\n  onInputChange,\n  options,\n  onCreateOption,\n  textPlaceholder,\n  value,\n  isClearable,\n  isValid,\n  messageText,\n}) => {\n  const { t } = useTranslation();\n\n  const customStyles = {\n    control: (provided, state) => {\n      return {\n        ...provided,\n        minHeight: '28px',\n        height: '28px',\n        backgroundColor: 'var(--component-background)',\n        borderColor: state.selectProps.isValid ? 'hsl(0, 0%, 80%)' : 'hsl(28, 80%, 52%)',\n        boxShadow: null,\n        '&:hover': null,\n      };\n    },\n    singleValue: (provided) => ({\n      ...provided,\n      color: 'var(--text-color)',\n    }),\n    menu: (provided) => ({\n      ...provided,\n      backgroundColor: 'var(--component-background)',\n      color: 'var(--text-color)',\n    }),\n    option: (provided) => ({\n      ...provided,\n      backgroundColor: 'var(--component-background)',\n      color: 'var(--text-color)',\n      '&:hover': {\n        backgroundColor: 'var(--popup-button-hover)',\n      }\n    }),\n    input: (provided) => ({\n      ...provided,\n      backgroundColor: 'var(--component-background)',\n      color: 'var(--text-color)',\n    }),\n    indicatorsContainer: (provided) => ({\n      ...provided,\n      paddingRight: '6px',\n      height: '26px',\n    }),\n  };\n\n  return (\n    <ReactSelectWebComponentProvider>\n      <CreatableSelect\n        isClearable={isClearable}\n        onChange={onChange}\n        onInputChange={onInputChange}\n        options={options}\n        onCreateOption={onCreateOption}\n        placeholder={textPlaceholder}\n        formatCreateLabel={(value) => `${t('action.create')} ${value}`}\n        value={value}\n        styles={customStyles}\n        isValid={isValid}\n        components={{ IndicatorsContainer: ReactSelectCustomArrowIndicator }}\n      />\n      {messageText ? <div className=\"messageText\">{messageText}</div> : undefined}\n    </ReactSelectWebComponentProvider>\n  );\n};\n\nexport default CreatableDropdown;\n","import CreatableDropdown from './CreatableDropdown';\n\nexport default CreatableDropdown;","import FormFieldPopupDimensionsInput from './FormFieldPopupDimensionsInput';\n\nexport default FormFieldPopupDimensionsInput;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst FormFieldPopupDimensionsInput = ({ width, height, onWidthChange, onHeightChange }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"form-dimension\">\n      <div>{t('formField.formFieldPopup.size')}:</div>\n      <div className=\"form-dimension-input\">\n        <input\n          id=\"form-field-width\"\n          type=\"number\"\n          min={0}\n          value={width}\n          onChange={(e) => onWidthChange(e.target.value)}\n        /> {t('formField.formFieldPopup.width')}\n      </div>\n      <div className=\"form-dimension-input\">\n        <input\n          id=\"form-field-height\"\n          type=\"number\"\n          min={0}\n          value={height}\n          onChange={(e) => onHeightChange(e.target.value)}\n        /> {t('formField.formFieldPopup.height')}\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldPopupDimensionsInput;","import React, { useRef, useCallback } from 'react';\nimport Button from '../Button';\nimport { useDrag, useDrop } from 'react-dnd';\nimport Icon from 'components/Icon';\n\nimport './CreatableList.scss';\n\nconst CreatableListItem = ({\n  option,\n  index,\n  onChange,\n  onDeleteItem,\n  moveListItem,\n  id,\n  addItem,\n}) => {\n  const ItemTypes = {\n    ITEM: 'item'\n  };\n\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.ITEM,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = (clientOffset).y - hoverBoundingRect.top;\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      // Time to actually perform the action\n      moveListItem(dragIndex, hoverIndex);\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.ITEM,\n    item: { type: ItemTypes.ITEM, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const onChangeHandler = useCallback((event) => {\n    onChange(event.target.value);\n  }, [onChange]);\n\n  const addNewItemOnEnterKey = useCallback((event) => {\n    if (event.key === 'Enter') {\n      addItem();\n    }\n  }, [addItem]);\n\n  drag(drop(ref));\n\n  const opacity = isDragging ? 0 : 1;\n\n  return (\n    <div ref={ref} style={{ opacity }} className=\"creatable-list-item\">\n      <div className=\"icon-handle\">\n        <Icon\n          glyph=\"icon-drag-handle\"\n        />\n      </div>\n      <input\n        type=\"text\"\n        onChange={onChangeHandler}\n        value={option.displayValue}\n        onKeyPress={addNewItemOnEnterKey}\n        autoFocus\n      />\n      <Button\n        title=\"action.delete\"\n        img=\"icon-delete-line\"\n        onClick={onDeleteItem}\n      />\n    </div>\n  );\n};\n\nexport default CreatableListItem;","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport Button from '../Button';\nimport { useTranslation } from 'react-i18next';\nimport CreatableListItem from './CreatableListItem';\n\nimport './CreatableList.scss';\n\nconst CreatableListContainer = ({\n  options,\n  onOptionsUpdated,\n  popupRef,\n}) => {\n  const { t } = useTranslation();\n\n  // In order to be draggable, each item needs a unique Id\n  // These are managed internally in this component and not exposed to the user\n  const draggableItems = options.map((option, index) => {\n    return {\n      id: index,\n      displayValue: option.displayValue,\n      value: option.value,\n    };\n  });\n  const [items, setItems] = useState(draggableItems);\n  const [nextId, setNextId] = useState(draggableItems.length);\n  const containerRef = useRef();\n\n  useEffect(() => {\n    const sanitizedOptions = items.map((item) => ({ value: item.value, displayValue: item.displayValue }));\n    onOptionsUpdated(sanitizedOptions);\n  }, [items, onOptionsUpdated]);\n\n  const onAddItem = useCallback(() => {\n    const id = nextId;\n    setNextId(nextId + 1);\n    setItems([...items, { id, value: '', displayValue: '' }]);\n    validatePopupHeight();\n  }, [nextId, items]);\n\n  const handleDeleteItem = (id) => () => {\n    const updatedItems = items.filter((item) => {\n      return id !== item.id;\n    });\n\n    setItems(updatedItems);\n  };\n\n  const handleItemValueChange = (id) => (value) => {\n    const updatedItems = items.map((item) => {\n      if (item.id !== id) {\n        return item;\n      }\n      return { ...item, value, displayValue: value };\n    });\n\n    setItems(updatedItems);\n  };\n\n  // We add this helper function that doesn't mutate the original array\n  // This way we dont need to add a package like immutability-helper as this is the only use case\n  function addItemAtIndex(array, index, value) {\n    const result = array.slice(0);\n    result.splice(index, 0, value);\n    return result;\n  }\n\n  const moveListItem = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragItem = items[dragIndex];\n\n      // Update items array without mutating original items array for perf reasons\n      // First we remove the element being dragged\n      const itemsWithoutDraggedElement = items.filter((_item, index) => index !== dragIndex);\n      // Now we add the dragged element at the index it's currently hovering\n      const itemsWithDraggedElementAtNewPosition = addItemAtIndex(itemsWithoutDraggedElement, hoverIndex, dragItem);\n\n      setItems(itemsWithDraggedElementAtNewPosition);\n    },\n    [items],\n  );\n\n  const validatePopupHeight = () => {\n    const popupContainer = popupRef.current;\n    const containerElement = containerRef.current;\n    const { bottom } = popupContainer.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const availableHeight = viewportHeight - bottom;\n    const isListOverflowing = containerElement.scrollHeight > containerElement.clientHeight;\n    if (availableHeight <= 40 && !isListOverflowing) {\n      const inputCount = containerElement.childElementCount;\n      const maxContainerHeight = inputCount * 40;\n      containerElement.style.maxHeight = `${maxContainerHeight}px`;\n    } else if (availableHeight > 40) {\n      containerElement.style.maxHeight = '200px';\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"creatable-list\" ref={containerRef}>\n        {items.map((item, index) => (\n          <CreatableListItem\n            key={item.id}\n            index={index}\n            id={item.id}\n            option={item}\n            onChange={handleItemValueChange(item.id)}\n            onDeleteItem={handleDeleteItem(item.id)}\n            moveListItem={moveListItem}\n            addItem={onAddItem}\n          />\n        ))}\n      </div>\n      <Button\n        title={t('action.addOption')}\n        className=\"add-item-button\"\n        label={t('action.addOption')}\n        img=\"icon-plus-sign\"\n        onClick={onAddItem}\n      />\n    </div>\n  );\n};\n\nexport default CreatableListContainer;","import CreatableList from './CreatableListContainer';\n\nexport default CreatableList;","import FormFieldEditPopupIndicator from './FormFieldEditPopupIndicator';\n\nexport default FormFieldEditPopupIndicator;","import React from 'react';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport { useTranslation } from 'react-i18next';\n\n\nconst FormFieldEditPopupIndicator = ({ indicator, indicatorPlaceholder }) => {\n  const { t } = useTranslation();\n  const onIndicatorChange = (showIndicator) => {\n    if (indicator.value.length < 1 && showIndicator) {\n      indicator.onChange(indicatorPlaceholder);\n    }\n    indicator.toggleIndicator(showIndicator);\n  };\n\n  return (\n    <div className=\"form-field-indicator-container\">\n      <span className=\"field-indicator-title\">{t('formField.formFieldPopup.fieldIndicator')}</span>\n      <Choice\n        checked={indicator.isChecked}\n        onChange={(event) => onIndicatorChange(event.target.checked)}\n        label={t(indicator.label)}\n      />\n      <div className=\"field-indicator\">\n        <Input\n          type=\"text\"\n          onChange={(event) => indicator.onChange(event.target.value)}\n          value={indicator.value}\n          fillWidth=\"false\"\n          placeholder={indicatorPlaceholder}\n          disabled={!indicator.isChecked}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldEditPopupIndicator;","import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport Button from '../Button';\nimport { useTranslation } from 'react-i18next';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport CreatableDropdown from '../CreatableDropdown';\nimport FormFieldPopupDimensionsInput from './FormFieldPopupDimensionsInput';\nimport HorizontalDivider from '../HorizontalDivider';\n\nimport './FormFieldEditPopup.scss';\nimport CreatableList from '../CreatableList';\nimport FormFieldEditPopupIndicator from './FormFieldEditPopupIndicator';\n\nconst FormFieldEditPopup = ({\n  fields,\n  flags,\n  closeFormFieldEditPopup,\n  isValid,\n  validationMessage,\n  radioButtonGroups,\n  options,\n  onOptionsChange,\n  annotation,\n  selectedRadioGroup,\n  getPageHeight,\n  getPageWidth,\n  redrawAnnotation,\n  indicator,\n  deleteAnnotation,\n}) => {\n  const { t } = useTranslation();\n  const className = classNames({\n    Popup: true,\n    FormFieldEditPopup: true,\n  });\n\n  const [width, setWidth] = useState(annotation.Width.toFixed(0));\n  const [height, setHeight] = useState(annotation.Height.toFixed(0));\n\n  const [initialWidth] = useState(annotation.Width.toFixed(0));\n  const [initialHeight] = useState(annotation.Height.toFixed(0));\n  const popupRef = useRef(null);\n\n  // If no radio group is yet set, set this as null as the select input will then show the correct prompt\n  const [radioButtonGroup, setRadioButtonGroup] = useState(\n    selectedRadioGroup === '' ? null : { value: selectedRadioGroup, label: selectedRadioGroup },\n  );\n\n  useEffect(() => {\n    // When we open up the popup the async call to set the right radio group may not be finished\n    // we deal with this timing issue by updating state when the prop is refreshed\n    if (selectedRadioGroup !== '') {\n      setRadioButtonGroup({ value: selectedRadioGroup, label: selectedRadioGroup });\n    } else {\n      setRadioButtonGroup(null);\n    }\n  }, [selectedRadioGroup]);\n\n  function onSelectInputChange(field, input) {\n    if (input === null) {\n      field.onChange('');\n      setRadioButtonGroup(null);\n    } else {\n      field.onChange(input.value);\n      setRadioButtonGroup({ value: input.value, label: input.value });\n    }\n  }\n\n  function onWidthChange(width) {\n    const validatedWidth = validateWidth(width);\n    annotation.setWidth(validatedWidth);\n    setWidth(validatedWidth);\n    redrawAnnotation(annotation);\n  }\n\n  function onHeightChange(height) {\n    const validatedHeight = validateHeight(height);\n    annotation.setHeight(validatedHeight);\n    setHeight(validatedHeight);\n    redrawAnnotation(annotation);\n  }\n\n  function validateWidth(width) {\n    const documentWidth = getPageWidth();\n    const maxWidth = documentWidth - annotation.X;\n    if (width > maxWidth) {\n      return maxWidth;\n    }\n    return width;\n  }\n\n  function validateHeight(height) {\n    const documentHeight = getPageHeight();\n    const maxHeight = documentHeight - annotation.Y;\n    if (height > maxHeight) {\n      return maxHeight;\n    }\n    return height;\n  }\n\n  function onCancel() {\n    // If the field name is empty, delete the annotation\n    if (!isValid) {\n      const { value } = fields.find((field) => field.label.includes('fieldName'));\n      if (value.trim() === '') {\n        deleteAnnotation(annotation);\n        closeFormFieldEditPopup();\n        return;\n      }\n    }\n    // If width/height changed return to original values\n    if (width !== initialWidth || height !== initialHeight) {\n      annotation.setWidth(initialWidth);\n      annotation.setHeight(initialHeight);\n    }\n    redrawAnnotation(annotation);\n    closeFormFieldEditPopup();\n  }\n\n  function renderInput(field) {\n    if (field.type === 'text') {\n      return renderTextInput(field);\n    }\n    if (field.type === 'select') {\n      return renderSelectInput(field);\n    }\n  }\n\n  function renderTextInput(field) {\n    return (\n      <Input\n        type=\"text\"\n        onChange={(event) => field.onChange(event.target.value)}\n        value={field.value}\n        fillWidth=\"false\"\n        messageText={field.required && !isValid ? t(validationMessage) : ''}\n        message={field.required && !isValid ? 'warning' : 'default'}\n        autoFocus={field.focus}\n      />\n    );\n  }\n\n  function renderSelectInput(field) {\n    const displayRadioGroups = radioButtonGroups.map((group) => ({ value: group, label: group }));\n    return (\n      <>\n        <CreatableDropdown\n          textPlaceholder={t('formField.formFieldPopup.fieldName')}\n          options={displayRadioGroups}\n          onChange={(inputValue) => onSelectInputChange(field, inputValue)}\n          value={radioButtonGroup}\n          isValid={isValid}\n          messageText={t(validationMessage)}\n        />\n        <div className=\"radio-group-label\">{t('formField.formFieldPopup.radioGroups')}</div>\n      </>\n    );\n  }\n\n  function renderListOptions() {\n    return (\n      <div className=\"field-options-container\">\n        {t('formField.formFieldPopup.options')}\n        <CreatableList options={options} onOptionsUpdated={onOptionsChange} popupRef={popupRef}/>\n      </div>\n    );\n  }\n\n  const indicatorPlaceholder = t(`formField.formFieldPopup.indicatorPlaceHolders.${annotation.getFormFieldPlaceholderType()}`);\n\n  return (\n    <div className={className} ref={popupRef}>\n      <div className=\"fields-container\">\n        {fields.map((field) => (\n          <div className=\"field-input\" key={field.label}>\n            <label>\n              {t(field.label)}\n              {field.required ? '*' : ''}:\n            </label>\n            {renderInput(field)}\n          </div>\n        ))}\n      </div>\n      {options && renderListOptions()}\n      <div className=\"field-flags-container\">\n        <span className=\"field-flags-title\">{t('formField.formFieldPopup.flags')}</span>\n        {flags.map((flag) => (\n          <Choice\n            key={flag.label}\n            checked={flag.isChecked}\n            onChange={(event) => flag.onChange(event.target.checked)}\n            label={t(flag.label)}\n          />\n        ))}\n      </div>\n      <FormFieldPopupDimensionsInput\n        width={width}\n        height={height}\n        onWidthChange={onWidthChange}\n        onHeightChange={onHeightChange}\n      />\n      <HorizontalDivider />\n      <FormFieldEditPopupIndicator\n        indicator={indicator}\n        indicatorPlaceholder={indicatorPlaceholder}\n      />\n      <div className=\"form-buttons-container\">\n        <Button\n          className=\"cancel-form-field-button\"\n          onClick={onCancel}\n          dataElement=\"formFieldCancel\"\n          label={t('formField.formFieldPopup.cancel')}\n        />\n        <Button\n          className=\"ok-form-field-button\"\n          onClick={closeFormFieldEditPopup}\n          dataElement=\"formFieldOK\"\n          label={t('action.ok')}\n          disabled={!isValid}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldEditPopup;\n","import React, { useState } from 'react';\nimport Select from 'react-select';\nimport { useTranslation } from 'react-i18next';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport SignatureModes from 'constants/signatureModes';\nimport ReactSelectCustomArrowIndicator from 'components/ReactSelectCustomArrowIndicator';\nimport ReactSelectWebComponentProvider from 'src/components/ReactSelectWebComponentProvider';\n\nimport './SignatureOptionsDropdown.scss';\n\nconst getStyles = () => ({\n  control: (provided) => ({\n    ...provided,\n    minHeight: '28px',\n    backgroundColor: 'var(--component-background)',\n    borderColor: 'hsl(0, 0%, 80%)',\n    boxShadow: null,\n    '&:hover': null,\n  }),\n  valueContainer: (provided) => ({\n    ...provided,\n    padding: '2px',\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    color: 'var(--text-color)',\n  }),\n  menu: (provided) => ({\n    ...provided,\n    backgroundColor: 'var(--component-background)',\n  }),\n  option: (provided) => ({\n    ...provided,\n    backgroundColor: 'var(--component-background)',\n    color: 'var(--text-color)',\n    '&:hover': {\n      backgroundColor: 'var(--popup-button-hover)',\n    }\n  }),\n  indicatorsContainer: (provided) => ({\n    ...provided,\n    paddingRight: '6px',\n    height: '26px',\n  }),\n});\n\nconst SignatureOptionsDropdown = (props) => {\n  const { onChangeHandler, initialOption } = props;\n  const { t } = useTranslation();\n  const styles = getStyles();\n  const signatureOptions = [\n    { value: SignatureModes.FULL_SIGNATURE, label: t('formField.types.signature') },\n    { value: SignatureModes.INITIALS, label: t('option.type.initials') },\n  ];\n\n  const init = signatureOptions.find((option) => option.value === initialOption);\n  const [value, setValue] = useState(init);\n\n  const onChange = (option) => {\n    setValue(option);\n    onChangeHandler(option);\n  };\n\n  return (\n    <DataElementWrapper className=\"signature-options-container\" dataElement=\"signatureOptionsDropdown\">\n      <label>{t('formField.type')}:</label>\n      <ReactSelectWebComponentProvider>\n        <Select\n          value={value}\n          onChange={onChange}\n          styles={styles}\n          options={signatureOptions}\n          isSearchable={false}\n          isClearable={false}\n          components={{ IndicatorsContainer: ReactSelectCustomArrowIndicator }}\n        />\n      </ReactSelectWebComponentProvider>\n    </DataElementWrapper>\n  );\n};\n\nexport default SignatureOptionsDropdown;","import SignatureOptionsDropdown from './SignatureOptionsDropdown';\n\nexport default SignatureOptionsDropdown;","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport Button from 'components/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport FormFieldPopupDimensionsInput from '../FormFieldPopupDimensionsInput';\nimport FormFieldEditPopupIndicator from '../FormFieldEditPopupIndicator';\nimport SignatureOptionsDropdown from './SignatureOptionsDropdown';\nimport HorizontalDivider from 'components/HorizontalDivider';\n\nimport '../FormFieldEditPopup.scss';\n\nconst FormFieldEditSignaturePopup = ({\n  fields,\n  flags,\n  closeFormFieldEditPopup,\n  isValid,\n  validationMessage,\n  annotation,\n  getPageHeight,\n  getPageWidth,\n  redrawAnnotation,\n  onSignatureOptionChange,\n  getSignatureOptionHandler,\n  indicator,\n  deleteAnnotation\n}) => {\n  const { t } = useTranslation();\n  const className = classNames({\n    Popup: true,\n    FormFieldEditPopup: true,\n  });\n\n  const [width, setWidth] = useState((annotation.Width).toFixed(0));\n  const [height, setHeight] = useState((annotation.Height).toFixed(0));\n\n  const [initialWidth] = useState((annotation.Width).toFixed(0));\n  const [initialHeight] = useState((annotation.Height).toFixed(0));\n  const [indicatorPlaceholder, setIndicatorPlaceholder] = useState(t(`formField.formFieldPopup.indicatorPlaceHolders.SignatureFormField.${getSignatureOptionHandler(annotation)}`));\n\n\n  function onWidthChange(width) {\n    const validatedWidth = validateWidth(width);\n    annotation.setWidth(validatedWidth);\n    setWidth(validatedWidth);\n    redrawAnnotation(annotation);\n  }\n\n  function onHeightChange(height) {\n    const validatedHeight = validateHeight(height);\n    annotation.setHeight(validatedHeight);\n    setHeight(validatedHeight);\n    redrawAnnotation(annotation);\n  }\n\n  function validateWidth(width) {\n    const documentWidth = getPageWidth();\n    const maxWidth = documentWidth - annotation.X;\n    if (width > maxWidth) {\n      return maxWidth;\n    }\n    return width;\n  }\n\n  function validateHeight(height) {\n    const documentHeight = getPageHeight();\n    const maxHeight = documentHeight - annotation.Y;\n    if (height > maxHeight) {\n      return maxHeight;\n    }\n    return height;\n  }\n\n  function onCancel() {\n    // If the field name is empty, delete the annotation\n    if (!isValid) {\n      // check if string includes value\n      const { value } = fields.find((field) => field.label.includes('fieldName'));\n      if (value.trim() === '') {\n        deleteAnnotation(annotation);\n        closeFormFieldEditPopup();\n        return;\n      }\n    }\n    // If width/height changed return to original values\n    if (width !== initialWidth || height !== initialHeight) {\n      annotation.setWidth(initialWidth);\n      annotation.setHeight(initialHeight);\n    }\n    redrawAnnotation(annotation);\n    closeFormFieldEditPopup();\n  }\n\n  function renderTextInput(field) {\n    return (\n      <Input\n        type=\"text\"\n        onChange={(event) => field.onChange(event.target.value)}\n        value={field.value}\n        fillWidth=\"false\"\n        messageText={field.required && !isValid ? t(validationMessage) : ''}\n        message={field.required && !isValid ? 'warning' : 'default'}\n        autoFocus={field.focus}\n      />\n    );\n  }\n\n  const onOptionChange = (option) => {\n    onSignatureOptionChange(option);\n    const { value } = option;\n    setIndicatorPlaceholder(t(`formField.formFieldPopup.indicatorPlaceHolders.SignatureFormField.${value}`));\n  };\n\n  return (\n    <div className={className}>\n      <SignatureOptionsDropdown onChangeHandler={onOptionChange} initialOption={getSignatureOptionHandler(annotation)} />\n      <div className=\"fields-container\">\n        {fields.map((field) => (\n          <div className=\"field-input\" key={field.label}>\n            <label>\n              {t(field.label)}{field.required ? '*' : ''}:\n            </label>\n            {renderTextInput(field)}\n          </div>\n        ))}\n      </div>\n      <div className=\"field-flags-container\">\n        <span className=\"field-flags-title\">{t('formField.formFieldPopup.flags')}</span>\n        {flags.map((flag) => (\n          <Choice\n            key={flag.label}\n            checked={flag.isChecked}\n            onChange={(event) => flag.onChange(event.target.checked)}\n            label={t(flag.label)}\n          />\n        ))}\n      </div>\n      <FormFieldPopupDimensionsInput\n        width={width}\n        height={height}\n        onWidthChange={onWidthChange}\n        onHeightChange={onHeightChange}\n      />\n      <HorizontalDivider />\n      <FormFieldEditPopupIndicator\n        indicator={indicator}\n        indicatorPlaceholder={indicatorPlaceholder}\n      />\n      <div className=\"form-buttons-container\">\n        <Button\n          className=\"cancel-form-field-button\"\n          onClick={onCancel}\n          dataElement=\"formFieldCancel\"\n          label={t('formField.formFieldPopup.cancel')}\n        />\n        <Button\n          className=\"ok-form-field-button\"\n          onClick={closeFormFieldEditPopup}\n          dataElement=\"formFieldOK\"\n          label={t('action.ok')}\n          disabled={!isValid}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldEditSignaturePopup;\n","import FormFieldEditSignaturePopup from './FormFieldEditSignaturePopup';\n\nexport default FormFieldEditSignaturePopup;","import React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from 'react';\nimport Draggable from 'react-draggable';\nimport core from 'core';\nimport FormFieldEditPopup from './FormFieldEditPopup';\nimport FormFieldEditSignaturePopup from './FormFieldEditSignaturePopup';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport classNames from 'classnames';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport { getAnnotationPopupPositionBasedOn } from 'helpers/getPopupPosition';\nimport DataElementWrapper from '../DataElementWrapper';\nimport { isMobileSize } from 'helpers/getDeviceSize';\nimport DataElements from 'constants/dataElement';\nimport { PRIORITY_THREE } from 'constants/actionPriority';\nimport './FormFieldEditPopup.scss';\n\nfunction FormFieldEditPopupContainer({ annotation }) {\n  const formFieldCreationManager = core.getFormFieldCreationManager();\n  const fieldLabels = formFieldCreationManager.getFieldLabels();\n  const [fieldName, setFieldName] = useState('');\n  const [fieldValue, setFieldValue] = useState('');\n  const [isReadOnly, setReadOnly] = useState(false);\n  const [isMultiLine, setMultiLine] = useState(false);\n  const [isRequired, setIsRequired] = useState(false);\n  const [isMultiSelect, setIsMultiSelect] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [radioButtonGroups, setRadioButtonGroups] = useState([]);\n  const [position, setPosition] = useState({ left: 0, top: 0 });\n  const [validationMessage, setValidationMessage] = useState('');\n  const [showIndicator, setShowIndicator] = useState(false);\n  const [indicatorText, setIndicatorText] = useState('');\n  const popupRef = useRef();\n\n  const [isOpen] = useSelector(\n    (state) => [selectors.isElementOpen(state, DataElements.FORM_FIELD_EDIT_POPUP)],\n    shallowEqual,\n  );\n\n  const dispatch = useDispatch();\n\n  useOnClickOutside(popupRef, () => {\n    if (fieldName.trim() !== '') {\n      closeAndReset();\n    }\n  });\n\n  function closeAndReset() {\n    dispatch(actions.enableElement(DataElements.ANNOTATION_POPUP, PRIORITY_THREE));\n    dispatch(actions.closeElement(DataElements.FORM_FIELD_EDIT_POPUP));\n    setFieldName('');\n    setFieldValue('');\n    setReadOnly(false);\n    setMultiLine(false);\n    setIsRequired(false);\n    setIsMultiSelect(false);\n    setIsValid(true);\n    setShowIndicator(false);\n    setIndicatorText('');\n  }\n\n\n  const deleteFormFieldPlaceholder = useCallback((annotation) => {\n    core.deleteAnnotations([annotation]);\n  }, []);\n\n  useEffect(() => {\n    const onFormFieldCreationModeStarted = () => {\n      // Do some cleanup of radio button groups,\n      // gets rid of groups that may have been added but never actually placed as fields\n      // or that were created but unlinked from a widget\n      setRadioButtonGroups(formFieldCreationManager.getRadioButtonGroups());\n    };\n\n    core.addEventListener('formFieldCreationModeStarted', onFormFieldCreationModeStarted);\n\n    return () => {\n      core.removeEventListener('formFieldCreationModeStarted', onFormFieldCreationModeStarted);\n    };\n  }, []);\n\n  // When we open the popup we need to populate the radio list with radio groups that are created,\n  // but not yet added as fields\n  useEffect(() => {\n    const radioButtons = core.getAnnotationsList().filter((annotation) => {\n      return annotation.isFormFieldPlaceholder() && annotation.getFormFieldPlaceholderType() === 'RadioButtonFormField';\n    });\n    const radioGroups = radioButtons.map((radioButton) => {\n      return formFieldCreationManager.getFieldName(radioButton);\n    });\n    const dedupedRadioGroups = [...(new Set([...radioGroups]))];\n    setRadioButtonGroups(dedupedRadioGroups);\n  }, []);\n\n  // We use layout effect to avoid a flickering as the popup is repositioned\n  // The flow is open popup -> update position.\n  // So we first open with an old position and then re-render to the new position. By using layoutEffect\n  // we let the hook run and update the position, and then the browser updates\n  useLayoutEffect(() => {\n    const setPopupPosition = () => {\n      if (popupRef.current) {\n        setPosition(getAnnotationPopupPositionBasedOn(annotation, popupRef));\n      }\n    };\n\n    if (isOpen && annotation) {\n      setPopupPosition();\n      setFieldName(formFieldCreationManager.getFieldName(annotation));\n      setFieldValue(formFieldCreationManager.getFieldValue(annotation));\n      setReadOnly(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.READ_ONLY));\n      setMultiLine(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.MULTI_LINE));\n      setIsRequired(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.REQUIRED));\n      setIsMultiSelect(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.MULTI_SELECT));\n      const dedupedRadioGroups = [...(new Set([...radioButtonGroups, ...formFieldCreationManager.getRadioButtonGroups()]))];\n      setRadioButtonGroups(dedupedRadioGroups);\n      // Field name is required, so if this is an empty string\n      // the field is not valid and the user should be warned\n      // As a failsafe the FormFieldCreationManager will create a unique field name if this is left blank\n      const isFieldNameValid = !!formFieldCreationManager.getFieldName(annotation);\n      setIsValid(isFieldNameValid);\n      let validationMessage = '';\n      if (!isFieldNameValid) {\n        validationMessage = 'formField.formFieldPopup.invalidField.empty';\n      }\n      setValidationMessage(validationMessage);\n      setShowIndicator(formFieldCreationManager.getShowIndicator(annotation));\n      setIndicatorText(formFieldCreationManager.getIndicatorText(annotation));\n    }\n  }, [isOpen]);\n\n  const onFieldNameChange = useCallback((name) => {\n    const validatedResponse = formFieldCreationManager.setFieldName(annotation, name);\n    setIsValid(validatedResponse.isValid);\n    mapValidationResponseToTranslation(validatedResponse);\n    setFieldName(name);\n  }, [annotation]);\n\n  const mapValidationResponseToTranslation = (validationResponse) => {\n    const { errorType } = validationResponse;\n    let translationKey = '';\n\n    switch (errorType) {\n      case 'empty':\n        translationKey = 'formField.formFieldPopup.invalidField.empty';\n        break;\n      case 'duplicate':\n        translationKey = 'formField.formFieldPopup.invalidField.duplicate';\n        break;\n    }\n\n    setValidationMessage(translationKey);\n  };\n\n  const onFieldValueChange = useCallback((value) => {\n    setFieldValue(value);\n    formFieldCreationManager.setFieldValue(annotation, value);\n  }, [annotation]);\n\n  const onReadOnlyChange = useCallback((isReadOnly) => {\n    setReadOnly(isReadOnly);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.READ_ONLY, isReadOnly);\n  }, [annotation]);\n\n  const onMultiLineChange = useCallback((isMultiLine) => {\n    setMultiLine(isMultiLine);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.MULTI_LINE, isMultiLine);\n  }, [annotation]);\n\n  const onRequiredChange = useCallback((isRequired) => {\n    setIsRequired(isRequired);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.REQUIRED, isRequired);\n  }, [annotation]);\n\n  const onMultiSelectChange = useCallback((isMultiSelect) => {\n    setIsMultiSelect(isMultiSelect);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.MULTI_SELECT, isMultiSelect);\n  }, [annotation]);\n\n  const onFieldOptionsChange = useCallback((options) => {\n    formFieldCreationManager.setFieldOptions(annotation, options);\n  }, [annotation]);\n\n  const onShowFieldIndicatorChange = useCallback((showIndicator) => {\n    setShowIndicator(showIndicator);\n    formFieldCreationManager.setShowIndicator(annotation, showIndicator);\n  }, [annotation]);\n\n  const onFieldIndicatorTextChange = useCallback((indicatorText) => {\n    setIndicatorText(indicatorText);\n    formFieldCreationManager.setIndicatorText(annotation, indicatorText);\n  }, [annotation]);\n\n  const closeFormFieldEditPopup = useCallback(() => {\n    closeAndReset();\n  }, []);\n\n  const onCloseRadioButtonPopup = useCallback(() => {\n    // Add new radio group (if any) to existing radio groups and we were in a valid state\n    if (isValid && radioButtonGroups.indexOf(fieldName) === -1 && fieldName !== '') {\n      setRadioButtonGroups([fieldName, ...radioButtonGroups]);\n    }\n    closeAndReset();\n  }, [fieldName, radioButtonGroups]);\n\n  const redrawAnnotation = useCallback((annotation) => {\n    core.getAnnotationManager().drawAnnotationsFromList([annotation]);\n  }, []);\n\n  const getPageHeight = useCallback(() => {\n    return core.getPageHeight(core.getCurrentPage());\n  }, []);\n\n  const getPageWidth = useCallback(() => {\n    return core.getPageWidth(core.getCurrentPage());\n  }, []);\n\n  const onSignatureOptionChange = useCallback((signatureOption) => {\n    const { value } = signatureOption;\n    formFieldCreationManager.setSignatureOption(annotation, value);\n  }, [annotation]);\n\n  const getSignatureOption = useCallback((formFieldPlaceHolder) => {\n    return formFieldCreationManager.getSignatureOption(formFieldPlaceHolder);\n  }, []);\n\n  const fields = {\n    NAME: {\n      label: 'formField.formFieldPopup.fieldName',\n      onChange: onFieldNameChange,\n      value: fieldName,\n      required: true,\n      type: 'text',\n      focus: true,\n    },\n    VALUE: {\n      label: 'formField.formFieldPopup.fieldValue',\n      onChange: onFieldValueChange,\n      value: fieldValue,\n      type: 'text',\n    },\n    RADIO_GROUP: {\n      label: 'formField.formFieldPopup.fieldName',\n      onChange: onFieldNameChange,\n      value: fieldName,\n      required: true,\n      type: 'select',\n    },\n  };\n\n  const textFields = [fields['NAME'], fields['VALUE']];\n\n  const defaultFields = [fields['NAME']];\n\n  const radioButtonFields = [fields['RADIO_GROUP']];\n\n  const listBoxFields = [fields['NAME']];\n\n  const comboBoxFields = [fields['NAME']];\n\n  const isMobile = isMobileSize();\n\n  const flags = {\n    READ_ONLY: {\n      label: 'formField.formFieldPopup.readOnly',\n      onChange: onReadOnlyChange,\n      isChecked: isReadOnly,\n    },\n    MULTI_LINE: {\n      label: 'formField.formFieldPopup.multiLine',\n      onChange: onMultiLineChange,\n      isChecked: isMultiLine,\n    },\n    REQUIRED: {\n      label: 'formField.formFieldPopup.required',\n      onChange: onRequiredChange,\n      isChecked: isRequired,\n    },\n    MULTI_SELECT: {\n      label: 'formField.formFieldPopup.multiSelect',\n      onChange: onMultiSelectChange,\n      isChecked: isMultiSelect,\n    },\n  };\n\n  const textFieldFlags = [flags['READ_ONLY'], flags['MULTI_LINE'], flags['REQUIRED']];\n\n  const signatureFlags = [flags['REQUIRED'], flags['READ_ONLY']];\n\n  const checkBoxFlags = [flags['READ_ONLY'], flags['REQUIRED']];\n\n  const radioButtonFlags = [flags['READ_ONLY'], flags['REQUIRED']];\n\n  const listBoxFlags = [flags['MULTI_SELECT'], flags['READ_ONLY'], flags['REQUIRED']];\n\n  const comboBoxFlags = [flags['READ_ONLY'], flags['REQUIRED']];\n\n  const indicator = {\n    label: 'formField.formFieldPopup.documentFieldIndicator',\n    toggleIndicator: onShowFieldIndicatorChange,\n    isChecked: showIndicator,\n    onChange: onFieldIndicatorTextChange,\n    value: indicatorText,\n  };\n\n  const renderTextFormFieldEditPopup = () => (\n    <FormFieldEditPopup\n      fields={textFields}\n      flags={textFieldFlags}\n      closeFormFieldEditPopup={closeFormFieldEditPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      annotation={annotation}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderSignatureFormFieldEditPopup = () => (\n    <FormFieldEditSignaturePopup\n      fields={defaultFields}\n      flags={signatureFlags}\n      closeFormFieldEditPopup={closeFormFieldEditPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      annotation={annotation}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      onSignatureOptionChange={onSignatureOptionChange}\n      getSignatureOptionHandler={getSignatureOption}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderCheckboxFormFieldEditPopup = () => (\n    <FormFieldEditPopup\n      fields={defaultFields}\n      flags={checkBoxFlags}\n      closeFormFieldEditPopup={closeFormFieldEditPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      annotation={annotation}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderRadioButtonFormFieldEditPopup = () => (\n    <FormFieldEditPopup\n      fields={radioButtonFields}\n      flags={radioButtonFlags}\n      closeFormFieldEditPopup={onCloseRadioButtonPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      radioButtonGroups={radioButtonGroups}\n      annotation={annotation}\n      selectedRadioGroup={fieldName}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderListBoxFormFieldEditPopup = () => {\n    const fieldOptions = formFieldCreationManager.getFieldOptions(annotation);\n\n    return (\n      <FormFieldEditPopup\n        fields={listBoxFields}\n        flags={listBoxFlags}\n        options={fieldOptions}\n        onOptionsChange={onFieldOptionsChange}\n        closeFormFieldEditPopup={closeFormFieldEditPopup}\n        isValid={isValid}\n        validationMessage={validationMessage}\n        annotation={annotation}\n        redrawAnnotation={redrawAnnotation}\n        getPageHeight={getPageHeight}\n        getPageWidth={getPageWidth}\n        indicator={indicator}\n        deleteAnnotation={deleteFormFieldPlaceholder}\n      />\n    );\n  };\n\n  const renderComboBoxFormFieldEditPopup = () => {\n    const fieldOptions = formFieldCreationManager.getFieldOptions(annotation);\n\n    return (\n      <FormFieldEditPopup\n        fields={comboBoxFields}\n        flags={comboBoxFlags}\n        options={fieldOptions}\n        onOptionsChange={onFieldOptionsChange}\n        closeFormFieldEditPopup={closeFormFieldEditPopup}\n        isValid={isValid}\n        validationMessage={validationMessage}\n        annotation={annotation}\n        redrawAnnotation={redrawAnnotation}\n        getPageHeight={getPageHeight}\n        getPageWidth={getPageWidth}\n        indicator={indicator}\n        deleteAnnotation={deleteFormFieldPlaceholder}\n      />\n    );\n  };\n\n  const renderPopUp = () => {\n    const intent = annotation?.getFormFieldPlaceholderType();\n    if (intent === 'TextFormField') {\n      return renderTextFormFieldEditPopup();\n    }\n    if (intent === 'SignatureFormField') {\n      return renderSignatureFormFieldEditPopup();\n    }\n    if (intent === 'CheckBoxFormField') {\n      return renderCheckboxFormFieldEditPopup();\n    }\n    if (intent === 'RadioButtonFormField') {\n      return renderRadioButtonFormFieldEditPopup();\n    }\n    if (intent === 'ListBoxFormField') {\n      return renderListBoxFormFieldEditPopup();\n    }\n    if (intent === 'ComboBoxFormField') {\n      return renderComboBoxFormFieldEditPopup();\n    }\n    return null;\n  };\n\n  const renderFormFieldEditPopup = () => (\n    <DataElementWrapper\n      className={classNames({\n        Popup: true,\n        FormFieldEditPopupContainer: true,\n        open: isOpen,\n        closed: !isOpen,\n      })}\n      data-element={DataElements.FORM_FIELD_EDIT_POPUP}\n      style={{ ...position }}\n      ref={popupRef}\n    >\n      {isOpen && renderPopUp()}\n    </DataElementWrapper>\n  );\n\n  if (!isMobile) {\n    // disable draggable on mobile devices\n    return (\n      <Draggable cancel=\".Button, .cell, .sliders-container svg, .creatable-list, .ui__input__input, .form-dimension-input, .ui__choice__input\">\n        {renderFormFieldEditPopup()}\n      </Draggable>\n    );\n  }\n  return renderFormFieldEditPopup();\n}\n\nexport default React.memo(FormFieldEditPopupContainer);\n","import FormFieldEditPopup from './FormFieldEditPopupContainer';\n\nexport default FormFieldEditPopup;"],"sourceRoot":""}